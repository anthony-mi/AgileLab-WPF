<UserControl x:Class="AgileLab.Views.ProductBacklog.ProductBacklog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AgileLab.Views.ProductBacklog"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:convertion="clr-namespace:AgileLab.Views.Convertion"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             dialog:DialogParticipation.Register="{Binding RelativeSource={RelativeSource Self}}"
             d:DataContext="{d:DesignInstance local:ProductBacklog}">

    <UserControl.Resources>
        <Style TargetType="{x:Type dialog:BaseMetroDialog}"
        x:Key="StoryDialogStyle"
        BasedOn="{StaticResource {x:Type dialog:BaseMetroDialog}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dialog:BaseMetroDialog}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryDialogShownStoryboard">
                                <DoubleAnimation AccelerationRatio=".9"
                                            BeginTime="0:0:0"
                                            Duration="0:0:0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Background="{TemplateBinding Background}">
                            <Border FocusVisualStyle="{x:Null}"
                            Focusable="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0"
                                                FontSize="{DynamicResource DialogTitleFontSize}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Text="{TemplateBinding Title}"
                                                TextWrapping="Wrap" 
                                                Margin="10" 
                                               HorizontalAlignment="Center"/>
                                    <ContentPresenter Grid.Row="1" Grid.Column="0"
                                                        Content="{TemplateBinding Content}" 
                                                        Margin="10" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryDialogShownStoryboard}" />
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type dialog:BaseMetroDialog}"
        x:Key="ErrorMessageDialogStyle"
        BasedOn="{StaticResource {x:Type dialog:BaseMetroDialog}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dialog:BaseMetroDialog}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="ErrorMessageDialogShownStoryboard">
                                <DoubleAnimation AccelerationRatio=".9"
                                            BeginTime="0:0:0"
                                            Duration="0:0:0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Background="{TemplateBinding Background}">
                            <Border FocusVisualStyle="{x:Null}"
                            Focusable="False">
                                <WrapPanel>
                                    <ContentPresenter Content="{TemplateBinding Content}" Margin="10" />
                                </WrapPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource ErrorMessageDialogShownStoryboard}" />
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu  x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Mark as in progress" Command="{Binding MarkAsInProgress}" CommandParameter="{Binding}"/>
            <MenuItem Header="Mark as completed" Command="{Binding MarkAsCompleted}" CommandParameter="{Binding}"/>
            <MenuItem Header="Edit" Command="{Binding EditCommand}" CommandParameter="{Binding}"/>
            <MenuItem Header="Remove" Command="{Binding RemoveCommand}" CommandParameter="{Binding}"/>
        </ContextMenu>
        <Style x:Key="DefaultRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <ContentControl Grid.Row="0" >
            <ScrollViewer VerticalScrollBarVisibility="Auto" >
                <StackPanel Orientation="Vertical">
                    <Button 
                        Margin="10" 
                        HorizontalContentAlignment="Stretch"
                        Command="{Binding RequestUserStoryCreation}"
                        Cursor="Hand"
>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconModern Kind="Add" Margin="5" />
                            <TextBlock VerticalAlignment="Center" FontSize="14" Margin="5 0" FontFamily="Verdana">Create user story</TextBlock>
                        </StackPanel>
                    </Button>
                    <DataGrid x:Name="storiesContainer" IsReadOnly="True" Margin="10 0" ItemsSource="{Binding Stories}" AutoGenerateColumns="False" RowStyle="{StaticResource DefaultRowStyle}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" Width="120" />
                            <DataGridTextColumn Header="Importance" Binding="{Binding Path=Importance, UpdateSourceTrigger=PropertyChanged}" Width="100" />
                            <DataGridTextColumn Header="Status" Binding="{Binding Path=Status}" Width="150" />
                            <DataGridTextColumn Header="Notes" Binding="{Binding Path=Notes}" Width="150" />
                            <DataGridTemplateColumn Header="" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding EditCommand}" 
                                        CommandParameter="{Binding}"
                                        Cursor="Hand"
                                        ToolTip="Edit">
                                            <iconPacks:PackIconMaterialLight Kind="Pencil" />
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding RemoveCommand}" 
                                        CommandParameter="{Binding}"
                                        Cursor="Hand"
                                        ToolTip="Remove">
                                            <iconPacks:PackIconOcticons Kind="X" />
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        <!--<DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Mark as in progress" Command="{Binding MarkAsInProgress}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Mark as completed" Command="{Binding MarkAsCompleted}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Edit" Command="{Binding EditCommand}"/>
                                <MenuItem Header="Remove" Command="{Binding RemoveCommand}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>-->
                    </DataGrid>
                </StackPanel>
            </ScrollViewer>
        </ContentControl>

        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource AccentBaseColor}"
                                             Opacity="0.85" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowErrorMessageDialog}"
                                     Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowStoryDialog}"
                                     Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowRemoveStoryConfirmationDialog}"
                                     Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <dialog:CustomDialog
                        x:Name="StoryDialog"
                        Style="{StaticResource StoryDialogStyle}"
                        Visibility="Hidden"
                        Title="User story"
                        HorizontalAlignment="Center">
                <StackPanel>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Height="30"
                            Text="Name"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="5" 
                            VerticalAlignment="Center" />
                        <TextBox 
                            Text="{Binding NewStoryName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            Grid.Row="0" 
                            Grid.Column="1" 
                            Margin="10" 
                            Width="150" 
                            VerticalAlignment="Center"/>

                        <TextBlock Height="30"
                            Text="Importance"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="5" 
                            VerticalAlignment="Center" />
                        <controls:NumericUpDown Minimum="1"
                            Maximum="10000"
                            Interval="1"
                            Value="{Binding NewStoryImportance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Grid.Row="1"
                            Grid.Column="1"
                            Width="150"
                            Margin="10"
                            HideUpDownButtons="False" />

                        <TextBlock Height="30"
                            Text="Status"
                            Grid.Row="2"
                            Grid.Column="0"
                            Margin="5" 
                            VerticalAlignment="Center" />
                        <ComboBox
                            ItemsSource="{Binding Statuses}"
                            Grid.Row="2"
                            Grid.Column="1"
                            Width="150"
                            Margin="10"
                            SelectedValue="{Binding NewStoryStatus, Mode=TwoWay}"
                            IsEnabled="{Binding IsNewStoryStatusEditable, Mode=OneWay}"/>

                        <TextBlock Height="30"
                            Text="Notes"
                            Grid.Row="3"
                            Grid.Column="0"
                            Margin="5" 
                            VerticalAlignment="Center" />
                        <TextBox 
                            Text="{Binding NewStoryNotes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            Grid.Row="3" 
                            Grid.Column="1" 
                            Margin="10" 
                            Height="50"
                            Width="150" 
                            VerticalAlignment="Center"
                            TextWrapping="Wrap"
                            AcceptsReturn="True"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Auto"/>

                        <TextBlock
                            Text="{Binding StoryCreationErrorMessage}"
                            Grid.Row="4"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="PaleVioletRed"
                            Margin="10" 
                            VerticalAlignment="Center"
                            Padding="5"
                            Visibility="{Binding ShowStoryCreationErrorMessage, Converter={StaticResource BoolToVisibility}, FallbackValue=Hidden}" />
                        <Button 
                        Content="Confirm" 
                        Grid.Row="5" 
                        Grid.Column="0" 
                        Margin="5" 
                        Command="{Binding ConfirmStoryCommand}"
                        Cursor="Hand"/>
                        <Button 
                        Content="Cancel" 
                        Grid.Row="5" 
                        Grid.Column="1" 
                        Margin="5" 
                        Command="{Binding CancelStoryCreation}"
                        Cursor="Hand"/>
                    </Grid>
                </StackPanel>
            </dialog:CustomDialog>

            <dialog:CustomDialog
                        x:Name="ErrorMessageDialog"
                        Style="{StaticResource ErrorMessageDialogStyle}"
                        Visibility="Hidden">
                <!--Visibility="{Binding ShowErrorMessageDialog}"-->
                <StackPanel>
                    <TextBlock Height="30"
                    Text="{Binding ErrorText}"
                    TextWrapping="Wrap" />
                    <Button 
                        Content="OK" 
                        Margin="10" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Bottom" 
                        Command="{Binding HideErrorMessageDialog}"
                        Cursor="Hand"/>
                </StackPanel>
            </dialog:CustomDialog>

            <dialog:CustomDialog
                        x:Name="UserStoryRemovingConfirmationDialog"
                        Style="{StaticResource ErrorMessageDialogStyle}"
                        Visibility="Hidden">
                <!--Visibility="{Binding ShowErrorMessageDialog}"-->
                <StackPanel Orientation="Vertical">
                    <TextBlock Height="30"
                               Text="Are you sure you want to delete the user story?"
                               TextWrapping="Wrap" 
                               Grid.Row="0"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"/>
                    <StackPanel Orientation="Horizontal">
                        <Button 
                            Content="Yes" 
                            Margin="10" 
                            Padding="20 5"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Bottom" 
                            Command="{Binding RemoveStoryCommand}"
                            Cursor="Hand"/>
                        <Button 
                            Content="No" 
                            Margin="10" 
                            Padding="20 5"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Bottom" 
                            Command="{Binding CancelStoryRemoving}"
                            Cursor="Hand"/>
                    </StackPanel>
                </StackPanel>
            </dialog:CustomDialog>
        </Grid>
    </Grid>

</UserControl>
